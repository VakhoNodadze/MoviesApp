{"version":3,"sources":["components/common/Like.jsx","components/common/TableHeader.jsx","components/common/TableBody.jsx","components/common/Table.jsx","components/MoviesTable.jsx","components/common/ListGroup.jsx","components/common/Pagination.jsx","services/fakeGenreService.js","services/fakeMovieService.js","components/Movies.jsx","utils/paginate.js","components/NavBar.jsx","components/MovieForm.jsx","components/Favourites.jsx","App.js","serviceWorker.js","index.js"],"names":["Like","props","classes","liked","react_default","a","createElement","onClick","style","cursor","className","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","order","onSort","renderSortIcon","column","_this2","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","_this$props","data","table","common_TableHeader","common_TableBody","MoviesTable","movie","Link","to","concat","title","common_Like","onLike","onDelete","movies","Table","listGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","Pagination","pageSize","itemsCount","onPageChange","currentPage","pageCount","Math","ceil","pages","range","page","genres","name","genre","numberInStock","dailyRentalRate","publishDate","getMovies","Movies","state","handleDelete","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","selectedGenre","handleSort","getPagedData","_this$state","allMovies","filtered","pageNumber","startIndex","slice","take","value","paginate","orderBy","totalCount","length","toConsumableArray","g","count","_this$state2","_this$getPagedData","ListGroup","components_MoviesTable","common_Pagination","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","MovieForm","_ref","match","history","params","push","Favourites","console","log","App","Fragment","components_NavBar","HashRouter","Route","component","Redirect","from","exact","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c29a36e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Like = (props) => {\r\n        let classes = \"fa fa-heart\";\r\n        if (!props.liked) {\r\n            classes += \"-o\";\r\n        }\r\n        return (\r\n            <div>\r\n                <i \r\n                onClick={props.onClick} \r\n                style={{cursor: 'pointer'}}\r\n                className={classes} ></i>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Like;","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path => {\r\n        const sortColumn = { ...this.props.sortColumn };\r\n        if (sortColumn.path === path) {\r\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\r\n        } else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n        this.props.onSort(sortColumn);\r\n    }\r\n    renderSortIcon = (column) => {\r\n        const { sortColumn } = this.props;\r\n\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n        return <i className=\"fa fa-sort-desc\"></i>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {this.props.columns.map(column => (\r\n                        < th onClick={() => this.raiseSort(column.path)}\r\n                            key={column.path || column.key}\r\n                            className=\"clickable\"\r\n                        >\r\n                            {column.label} {this.renderSortIcon(column)}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item);\r\n\r\n        return _.get(item, column.path);\r\n    }\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key);\r\n    }\r\n\r\n    render() {\r\n        const { data, columns } = this.props;\r\n        return (\r\n            <tbody>\r\n                {data.map(item => (\r\n                    <tr key={item._id} >\r\n                        {columns.map(column =>\r\n                            <td\r\n                                key={this.createKey(item, column)} >\r\n                                {this.renderCell(item, column)}\r\n                            </td>)}\r\n                    </tr>))\r\n                }\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './TableHeader';\r\nimport TableBody from './TableBody';\r\n\r\n\r\nconst table = (props) => {\r\n    const { columns, sortColumn, onSort, data } = props;\r\n    \r\n    return (\r\n        <table className=\"table table-hover\">\r\n            <TableHeader\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n            <TableBody data={data} columns={columns} />\r\n        </table>);\r\n}\r\n\r\nexport default table;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Like from './common/Like';\r\nimport Table from './common/Table';\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        {\r\n            path: \"title\",\r\n            label: \"Title\",\r\n            content: movie => <Link to={`/movies/${movie.title}`}>{movie.title}</Link>\r\n        },\r\n        { path: 'genre.name', label: 'Genre' },\r\n        { path: 'numberInStock', label: 'Stock' },\r\n        { path: 'dailyRentalRate', label: 'Rate' },\r\n        {\r\n            key: 'like',\r\n            content: movie =>\r\n                <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n        },\r\n        {\r\n            key: 'delete', content: (\r\n                movie =>\r\n                    <button className=\"btn btn-danger btn-sm\" onClick={() => this.props.onDelete(movie._id)}\r\n                    >\r\n                        Remove</button>\r\n            )\r\n        }\r\n    ]\r\n\r\n    render() {\r\n\r\n        const { movies, onSort, sortColumn } = this.props;\r\n\r\n        return (\r\n            <Table\r\n                columns={this.columns}\r\n                data={movies}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from 'react';\r\n\r\nconst listGroup = (props) => {\r\n    const { items, textProperty, valueProperty, onItemSelect, selectedItem } = props;\r\n\r\n    return <ul className=\"list-group\">\r\n        {items.map(item => (\r\n            < li onClick={() => onItemSelect(item)}\r\n                style={{ cursor: 'pointer' }}\r\n                key={item[valueProperty]}\r\n                className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"} >\r\n                {item[textProperty]}\r\n            </li>))}\r\n    </ul>;\r\n}\r\n\r\nlistGroup.defaultProps = {\r\n    textProperty: 'name',\r\n    valueProperty: '_id'\r\n}\r\n\r\nexport default listGroup;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n    const { pageSize, itemsCount, onPageChange, currentPage } = props;\r\n\r\n    const pageCount = Math.ceil(itemsCount / pageSize);\r\n    if (pageCount === 1) return null\r\n    const pages = _.range(1, pageCount + 1);\r\n    return <nav>\r\n        <ul className=\"pagination\">\r\n            {pages.map(page =>\r\n                <li key={page}\r\n                    className={page === currentPage ? 'page-item active' : 'page-item'}>\r\n                    <p className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                        {page}\r\n                    </p>\r\n                </li>)\r\n            }\r\n        </ul>\r\n    </nav>\r\n}\r\n\r\nexport default Pagination;","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from \"react\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport ListGroup from \"./common/ListGroup\";\r\nimport Pagination from \"./common/Pagination\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n\r\n  handleDelete = movie => {\r\n    const movies = this.state.movies.filter(m => m._id !== movie);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = this.state.movies;\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    const filtered =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n        : allMovies;\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber,  pageSize){\r\n    const startIndex = (pageNumber -1) * pageSize;\r\n    return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value()\r\n}","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n            Movies\n          </NavLink>\n          {/* <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink> */}\n          <NavLink className=\"nav-item nav-link\" to=\"/favourites\">\n            Favourites\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst MovieForm = ({ match, history }) => {\n  return (\n    <div>\n      <h1>Movie Name is: {match.params.title} </h1>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => history.push(\"/movies\")}\n      >\n        Save\n      </button>\n    </div>\n  );\n};\n\nexport default MovieForm;\n","import React, { Component } from 'react';\r\nimport MoviesTable from './MoviesTable';\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\n\r\nclass Favourites extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres: [],\r\n        sortColumn: { path: \"title\", order: \"asc\" }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({ movies: getMovies().filter(movie => movie.liked) });\r\n    }\r\n\r\n    handleDelete = movie => {\r\n        const movies = this.state.movies.filter(m => m._id !== movie);\r\n        this.setState({ movies });\r\n        console.log(movie);\r\n    };\r\n\r\n    handleSort = sortColumn => {\r\n        this.setState({ sortColumn });\r\n    }\r\n\r\n    handleLike = movie => {\r\n        const movies = this.state.movies;\r\n        const index = movies.indexOf(movie);\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({ movies: movies.filter(m => m.liked) });\r\n    };\r\n\r\n    render() {\r\n        const { movies, sortColumn } = this.state;\r\n        return (\r\n            <div className=\"favourites\">\r\n                <MoviesTable\r\n                    movies={movies}\r\n                    sortColumn={sortColumn}\r\n                    onLike={this.handleLike}\r\n                    onDelete={this.handleDelete}\r\n                    onSort={this.handleSort}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Favourites;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\n// import NotFound from './components/NotFound';\nimport NavBar from './components/NavBar';\nimport MovieForm from './components/MovieForm';\nimport { Route, Redirect, HashRouter } from \"react-router-dom\";\nimport Favourites from './components/Favourites';\n// import Customers from './components/Customers';\n// import Rentals from './components/Rentals';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <HashRouter>\n            <Route path=\"/movies/:title\" component={MovieForm} />\n            <Route path=\"/movies\" component={Movies} />\n            {/* <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} /> */}\n            <Route path=\"/favourites\" component={Favourites} />\n            {/* <Route path=\"/not-found\" component={NotFound} /> */}\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </HashRouter>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from 'react-router-dom';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}